I want to build a web application that would permit the generation of the k8 application yml files ie the values and the secret files, i will provide you with template and explain to you guide you on how the architecture is structure for you to come out with a good react vite application that will manage that after entering the required data in the form and generating the diffrerent scripts on the left for the user to copy the files and take note that the file should have the name of the project(genericName).

Here is the content of the value.yml file for a demo project, take note that the file has the name nxh-[genericName]-ms-values.yml and this is the content that can be generated

# This file contains Helm values for the microservice



# Says if the service is used by NEXAH for internal (For NEXAH only) or external (For customers) purpose
isInternalService: false

# Domain name used to deploy this service.
dns: nexah.net

application:

  # Application generic name. This generic name will be used to create other names by
  # concatenation of this generic name with information like prefix 'nxh', suffix 'dev'
  # and other information
  genericName: abc-finance-recommend-web-admin

  # Application tier. Different tiers are : 'frontend' and 'backend'
  tier: backend

  # Application role Different roles are : 'api', 'db', 'web' or 'mobile'
  role: web

  # For now, NEXAH has 4 categories of applications:
  # 1. Core Applications (core): Applications that are essential for the core functionality of the system and for other applications. Ex: argocd, cert-manager, external-dns, etc.
  # 2. Nexah Applications (nexah): Applications that are developed and maintained by NEXAH.
  # 3. AI Applications (ai): Applications that are related to artificial intelligence and machine learning.
  # 4. Business Applications (business): Applications that are related to business operations and processes, but not developed by NEXAH. Ex: Postfix

  # Application category. Different categories are : 'core', 'nexah', 'ai' or 'business'
  category: nexah
  
container:

  # Container image. Give the container image with  its tag
  image: nexah/generic-recommend-web-admin:1.0.2
  
  # Says if the service needs to connect to the database.
secretEnvironmentVariables: 
  Enabled: false  # Set to false if this service doesn't require a database
  
  Keys:
  - NXH_API_BASE_URL
  - NXH_APP_ID
  - NXH_AUTH_BASE_URL
  - NXH_APP_BASE_URL
  - NXH_APP_NAME
  - NXH_APP_USE_MOCK_API
  - NXH_APP_COLOR_PRIMARY_DEFAULT
  - NXH_APP_COLOR_SECONDARY_DEFAULT
  - NXH_APP_LOGO_URL
  - NXH_APP_BACKGROUND_URL


The user should have the possibility of
- choosing the tyoe of service isInternalService, true or false
- should take the genericName as input also that will help to generate the name of the file
- ask the use to choose the tier , frontend or backend
- ask to choose the role
- ask the link of the docker image with the tag
- user can enter dynamic number of  Key values environmental variables (Take note about the values of the key, the user enter the values and the script generate the value.yml file with the keys and the values will be manage in the other file for the secret)


Now lets move to the generation of the secret yml file below is an example of the secret of a project. the file is nxh-billing-api-db-secr-dev.yml, where
we have something like this nxh-[genericName]-db-secr-[environment].yml file name that will be generated. 
Take note that this file content  has the dynamic key values of the env provided by the user that will be generated that are encoded to base 64 
Below is the content of the file


apiVersion: v1
kind: Secret
metadata:
  # name: the values is also the same values as the name of the file
  name: nxh-billing-api-db-secr-dev


  # namespace: nxh-external-services-ns-dev or nxh-internal-services-ns-dev, so the user should select
  namespace: nxh-internal-services-ns-dev

type: Opaque
data:
  NXH_DATABASE_HOST: bnhoLW5leGFoLXJkcy1kZXYuY3NycjNyZ252amZ0LnVzLWVhc3QtMS5yZHMuYW1hem9uYXdzLmNvbQ==  # Replace with your MySQL host name or service in Base 64
  NXH_DATABASE_PORT: MzMwNg==            # MySQL default port in Base 64
  NXH_DATABASE_NAME: YmlsbGluZ19kYg==       # Replace with your MySQL database name in Base 64
  NXH_DATABASE_USER: YWRtaW4=       # Replace with your MySQL database user in Base 64
  NXH_DATABASE_PASSWORD: bmV4YWgxMjM=   # Replace with your MySQL database password in Base 64
  NXH_AWS_ACCESS_KEY_ID: QUtJQTNFSExLUU83T0FTREtRRk4=
  NXH_AWS_SECRET_ACCESS_KEY: WDRtTVd3LzNIbzh6WjrjOHlKeUFRNkwrbU10cXFoNWNlNDlab3V0Mw==
  NXH_AWS_DEFAULT_REGION: dXMtZuFzdC0y
  NXH_AWS_BUCKET: bnhoLXBpYw==
  NXH_AWS_USE_PATH_STYLE_ENDPOINT: ZmFsclU=

 
  # "echo -n 'parameter' | base64" to put in base 64



  Take note that when the user says something like create application, he enters the required information and clicks on generated, it should generate 2 files with the dynamics names as explained and asked the user to download it